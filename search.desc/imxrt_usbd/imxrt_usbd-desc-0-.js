searchState.loadedDescShard("imxrt_usbd", 0, "A USB driver for i.MX RT processors\nA full- and high-speed <code>UsbBus</code> implementation\nMemory for endpoint I/O.\nDriver state associated with endpoints.\nHigh speed.\nThrottle to low / full speeds.\nThe maximum supported number of endpoints.\nA type that owns all USB register blocks\nUSB low / full / high speed setting.\nApply device configurations, and perform other …\nEnable zero-length termination (ZLT) for the given endpoint\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUSB general purpose timers.\nAcquire one of the GPT timer instances.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllocate space for the maximum number of endpoints.\nAllocate endpoint memory.\nCreate a high-speed USB bus adapter\nAllocate state for <code>COUNT</code> endpoints.\nEnable (<code>true</code>) or disable (<code>false</code>) interrupts for this USB …\nReturns the pointer to the USB register block.\nReturns the pointer to the USBPHY register block.\nCreate a USB bus adapter with the given speed\nCreate a USB bus adapter that never takes a critical …\nGeneral purpose timer (GPT).\nThe GPT0 timer instance.\nThe GPT1 timer instance.\nGPT instance identifiers.\nGPT timer mode.\nIn one shot mode, the timer will count down to zero, …\nIn repeat mode, the timer will count down to zero, …\nClear the flag that indicates the timer has elapsed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the GPT instance identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates if the timer has elapsed.\nIndicates if interrupt generation is enabled.\nIndicates if the timer is running (<code>true</code>) or stopped (<code>false</code>…\nReturns the counter load value.\nReturns the timer mode.\nReset the timer.\nRun the GPT timer.\nEnable or disable interrupt generation when the timer …\nSet the counter load value.\nSet the timer mode.\nStop the timer.")