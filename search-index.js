var searchIndex = JSON.parse('{\
"imxrt_usbd":{"doc":"A USB driver for i.MX RT processors","t":[4,8,13,13,11,11,11,11,11,11,0,0,10,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Instance","Peripherals","USB1","USB2","borrow","borrow_mut","clone","eq","fmt","from","full_speed","gpt","instance","into","try_from","try_into","type_id","BusAdapter","alloc_ep","borrow","borrow_gpt","borrow_mut","configure","enable","from","into","is_stalled","new","poll","read","reset","resume","set_device_address","set_interrupts","set_stalled","suspend","try_from","try_into","type_id","write","Gpt","Gpt0","Gpt1","Instance","Mode","OneShot","Repeat","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_elapsed","clone","clone","eq","eq","fmt","fmt","from","from","from","instance","into","into","into","is_elapsed","is_interrupt_enabled","is_running","load","mode","reset","run","set_interrupt_enabled","set_load","set_mode","stop","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["imxrt_usbd","","","","","","","","","","","","","","","","","imxrt_usbd::full_speed","","","","","","","","","","","","","","","","","","","","","","","imxrt_usbd::gpt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["USB instance identifiers","A type that owns all USB register blocks","The first USB register instance","The second USB register instance","","","","","","","A full-speed i.MX RT USB driver, supporting the <code>usb-device</code> …","USB general purpose timers.","Returns the instance identifier for the core registers","","","","","A <code>UsbBus</code> implementation","","","Acquire one of the GPT timer instances.","","Apply device configurations, and perform other …","","","","","Create a USB bus adapter","","","","","","Enable (<code>true</code>) or disable (<code>false</code>) interrupts for this USB …","","","","","","","General purpose timer (GPT).","The GPT0 timer instance.","The GPT1 timer instance.","GPT instance identifiers.","GPT timer mode.","In one shot mode, the timer will count down to zero, …","In repeat mode, the timer will count down to zero, …","","","","","","","Clear the flag that indicates the timer has elapsed.","","","","","","","","","","Returns the GPT instance identifier.","","","","Indicates if the timer has elapsed.","Indicates if interrupt generation is enabled.","Indicates if the timer is running (<code>true</code>) or stopped (<code>false</code>…","Returns the counter load value.","Returns the timer mode.","Reset the timer.","Run the GPT timer.","Enable or disable interrupt generation when the timer …","Set the counter load value.","Set the timer mode.","Stop the timer.","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,0,2,1,1,1,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,0,5,5,6,5,4,6,5,4,6,5,4,5,4,5,4,6,5,4,6,6,5,4,6,6,6,6,6,6,6,6,6,6,6,6,5,4,6,5,4,6,5,4],"f":[null,null,null,null,[[]],[[]],[[],["instance",4]],[[["instance",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],null,null,[[],["instance",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["u8",15],["endpointaddress",3],["usbdirection",4],["u16",15],["option",4,["endpointaddress"]],["endpointtype",4]],[["endpointaddress",3],["result",6,["endpointaddress"]]]],[[]],[[["instance",4],["criticalsection",3]]],[[]],[[]],[[]],[[]],[[]],[[["endpointaddress",3]],["bool",15]],[[["peripherals",8]]],[[],["pollresult",4]],[[["endpointaddress",3]],[["usize",15],["result",6,["usize"]]]],[[]],[[]],[[["u8",15]]],[[["bool",15]]],[[["endpointaddress",3],["bool",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["endpointaddress",3]],[["usize",15],["result",6,["usize"]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mode",4]],[[],["instance",4]],[[["mode",4]],["bool",15]],[[["instance",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["instance",4]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["mode",4]],[[]],[[]],[[["bool",15]]],[[["u32",15]]],[[["mode",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Instance"],[8,"Peripherals"],[3,"BusAdapter"],[4,"Instance"],[4,"Mode"],[3,"Gpt"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};