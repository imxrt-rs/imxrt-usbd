name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # Ensure Rust code formatting is consistent across all source code.
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: rustup component add rustfmt
    - name: Check library formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --verbose --all -- --check

  # For each chip, build and lint the main library
  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
        target: thumbv7em-none-eabihf
        override: true
        profile: minimal
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --verbose --all-features --target thumbv7em-none-eabihf -- -D warnings
        name: Lint the library

  # Run unit and documentation tests for a chip
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run unit and documentation tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose

  # Check if MSRV (Minimal Supported Rust Version) in Cargo.toml can compile the project
  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install cargo-binstall
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-binstall

      - name: Install cargo-msrv
        run: cargo binstall --version 0.16.0-beta.20 --no-confirm cargo-msrv

      #- uses: Swatinem/rust-cache@v1

      - name: Check MSRV
        # Enable this to automatically determine what the MSRV should be
        #run: cargo msrv --output-format json --target=thumbv7em-none-eabihf --all-features
        run: cargo msrv --output-format json --target=thumbv7em-none-eabihf --all-features verify

  # Make sure documentation builds, and doclinks are valid
  doc:
    env:
      RUSTDOCFLAGS: -D warnings
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check documentation and doclinks
      uses: actions-rs/cargo@v1
      with:
        command: rustdoc
